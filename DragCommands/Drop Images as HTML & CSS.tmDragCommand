<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

drop = {
  :relative_path =&gt; ENV['TM_DROPPED_FILE'],
  :path =&gt; ENV['TM_DROPPED_FILEPATH'],
  :opts =&gt;(ENV['TM_MODIFIER_FLAGS'].split('|').sort rescue [] ),
}

drop[:width], drop[:height] = `sips -g pixelWidth -g pixelHeight "#{drop[:path]}"`.scan(/(?:Width|Height): (\d+)/).flatten
drop[:width ] = drop[:width ].to_i
drop[:height] = drop[:height].to_i

drop[:basename] = drop[:relative_path].gsub(/^.*\//,'').gsub(/\..*$/,'')

class String
  def to_css_class
    self.gsub(/^[^a-z]+/i,'')
  end
  def to_alt
    self.gsub(/[-_](\w)/){' ' + $1.upcase}.gsub(/^(\w)/){$1.upcase}
  end
end

snippets = {
  [] =&gt; %{&lt;img src="#{drop[:relative_path]}" width="#{drop[:width]}" height="#{drop[:height]}" alt="#{drop[:basename].to_alt}"#{ENV['TM_XHTML']}&gt;},
  
  
  ['OPTION'] =&gt; &lt;&lt;-html, #alternate
&lt;style type="text/css" media="screen"&gt;${100:.${10:#{drop[:basename].to_css_class}}{background: url('#{drop[:relative_path]}') no-repeat top left;	height: #{drop[:height]}px;	width:  #{drop[:width]}px; display: block; overflow: hidden;\\}}&lt;/style&gt;
$1&lt;div class="$10"&gt;${0:#{drop[:basename].to_alt}}&lt;/div&gt;
  html
  
  
  ['OPTION','SHIFT'] =&gt; &lt;&lt;-html, #alternate alternate
&lt;style type="text/css" media="screen"&gt;
${100:.${10:#{drop[:basename].to_css_class}}{background: url('#{drop[:relative_path]}') no-repeat top left;  line-height: #{drop[:height]}px; height: #{drop[:height]}px;	width:  #{drop[:width] / 3}px; display: block; overflow: hidden;\\}
.$10:hover {background-position:top center;\\}
.$10:active{background-position:top right;\\}
}&lt;/style&gt;
$1&lt;a href="\#$10" class="$10"&gt;${0:#{drop[:basename].to_alt}}&lt;/a&gt;
  html
  
  
  # ['SHIFT'] =&gt; &lt;&lt;-html,
  # SHIFT
  # html
  # ['CONTROL'] =&gt; &lt;&lt;-html,
  # CONTROL
  # html
  # ['OPTION','SHIFT'] =&gt; &lt;&lt;-html, #alternate alternate
  # ['OPTION','SHIFT']
  # html
  # ['COMMAND'] =&gt; &lt;&lt;-html,
  # COMMAND
  # html
}

print snippets[drop[:opts]]
</string>
	<key>draggedFileExtensions</key>
	<array>
		<string>png</string>
		<string>jpg</string>
		<string>jpeg</string>
		<string>gif</string>
		<string>svg</string>
	</array>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Drop Images as HTML &amp; CSS</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>text.html.basic -string</string>
	<key>uuid</key>
	<string>03E509EC-FFB4-4653-A73C-2898C3D2C0A8</string>
</dict>
</plist>
